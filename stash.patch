diff --git a/JoustGame/.vs/Joust/v15/.suo b/JoustGame/.vs/Joust/v15/.suo
new file mode 100644
index 0000000..fe154f9
Binary files /dev/null and b/JoustGame/.vs/Joust/v15/.suo differ
diff --git a/JoustGame/.vs/Joust/v15/Server/sqlite3/db.lock b/JoustGame/.vs/Joust/v15/Server/sqlite3/db.lock
new file mode 100644
index 0000000..e69de29
diff --git a/JoustGame/.vs/Joust/v15/Server/sqlite3/storage.ide b/JoustGame/.vs/Joust/v15/Server/sqlite3/storage.ide
new file mode 100644
index 0000000..35697e6
Binary files /dev/null and b/JoustGame/.vs/Joust/v15/Server/sqlite3/storage.ide differ
diff --git a/JoustGame/JoustClient/obj/Debug/App.g.cs b/JoustGame/JoustClient/obj/Debug/App.g.cs
new file mode 100644
index 0000000..f1eb85c
--- /dev/null
+++ b/JoustGame/JoustClient/obj/Debug/App.g.cs
@@ -0,0 +1,70 @@
+﻿#pragma checksum "..\..\App.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "16CE6FECC5A65C868CAA0EB588474A1A41A94A65"
+//------------------------------------------------------------------------------
+// <auto-generated>
+//     This code was generated by a tool.
+//     Runtime Version:4.0.30319.42000
+//
+//     Changes to this file may cause incorrect behavior and will be lost if
+//     the code is regenerated.
+// </auto-generated>
+//------------------------------------------------------------------------------
+
+using JoustClient;
+using System;
+using System.Diagnostics;
+using System.Windows;
+using System.Windows.Automation;
+using System.Windows.Controls;
+using System.Windows.Controls.Primitives;
+using System.Windows.Data;
+using System.Windows.Documents;
+using System.Windows.Ink;
+using System.Windows.Input;
+using System.Windows.Markup;
+using System.Windows.Media;
+using System.Windows.Media.Animation;
+using System.Windows.Media.Effects;
+using System.Windows.Media.Imaging;
+using System.Windows.Media.Media3D;
+using System.Windows.Media.TextFormatting;
+using System.Windows.Navigation;
+using System.Windows.Shapes;
+using System.Windows.Shell;
+
+
+namespace JoustClient {
+    
+    
+    /// <summary>
+    /// App
+    /// </summary>
+    public partial class App : System.Windows.Application {
+        
+        /// <summary>
+        /// InitializeComponent
+        /// </summary>
+        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
+        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
+        public void InitializeComponent() {
+            
+            #line 5 "..\..\App.xaml"
+            this.StartupUri = new System.Uri("MainWindow.xaml", System.UriKind.Relative);
+            
+            #line default
+            #line hidden
+        }
+        
+        /// <summary>
+        /// Application Entry Point.
+        /// </summary>
+        [System.STAThreadAttribute()]
+        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
+        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
+        public static void Main() {
+            JoustClient.App app = new JoustClient.App();
+            app.InitializeComponent();
+            app.Run();
+        }
+    }
+}
+
diff --git a/JoustGame/JoustClient/obj/Debug/JoustClient.csproj.CoreCompileInputs.cache b/JoustGame/JoustClient/obj/Debug/JoustClient.csproj.CoreCompileInputs.cache
index 46baf50..ac9ea7c 100644
--- a/JoustGame/JoustClient/obj/Debug/JoustClient.csproj.CoreCompileInputs.cache
+++ b/JoustGame/JoustClient/obj/Debug/JoustClient.csproj.CoreCompileInputs.cache
@@ -1 +1 @@
-e267fefeacba836f83d799888ae6bcab7aba4e58
+5899105f188e3037af4dfaea08f79cf5f39e60b3
diff --git a/JoustGame/JoustClient/obj/Debug/JoustClient_MarkupCompile.cache b/JoustGame/JoustClient/obj/Debug/JoustClient_MarkupCompile.cache
new file mode 100644
index 0000000..c951b4e
--- /dev/null
+++ b/JoustGame/JoustClient/obj/Debug/JoustClient_MarkupCompile.cache
@@ -0,0 +1,20 @@
+﻿JoustClient
+
+
+winexe
+C#
+.cs
+C:\Users\jacob\Desktop\CpS 209\joust\JoustGame\JoustClient\obj\Debug\
+JoustClient
+none
+false
+DEBUG;TRACE
+C:\Users\jacob\Desktop\CpS 209\joust\JoustGame\JoustClient\App.xaml
+11151548125
+
+9-80723502
+131569487696
+MainWindow.xaml;
+
+True
+
diff --git a/JoustGame/JoustClient/obj/Debug/JoustClient_MarkupCompile.lref b/JoustGame/JoustClient/obj/Debug/JoustClient_MarkupCompile.lref
new file mode 100644
index 0000000..18288ac
--- /dev/null
+++ b/JoustGame/JoustClient/obj/Debug/JoustClient_MarkupCompile.lref
@@ -0,0 +1,4 @@
+﻿
+
+FC:\Users\jacob\Desktop\CpS 209\joust\JoustGame\JoustClient\MainWindow.xaml;;
+
diff --git a/JoustGame/JoustClient/obj/Debug/MainWindow.g.cs b/JoustGame/JoustClient/obj/Debug/MainWindow.g.cs
new file mode 100644
index 0000000..b973fb8
--- /dev/null
+++ b/JoustGame/JoustClient/obj/Debug/MainWindow.g.cs
@@ -0,0 +1,75 @@
+﻿#pragma checksum "..\..\MainWindow.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "08AC1B65D11E4564B81D9348D0C24F3F4AFFB692"
+//------------------------------------------------------------------------------
+// <auto-generated>
+//     This code was generated by a tool.
+//     Runtime Version:4.0.30319.42000
+//
+//     Changes to this file may cause incorrect behavior and will be lost if
+//     the code is regenerated.
+// </auto-generated>
+//------------------------------------------------------------------------------
+
+using JoustClient;
+using System;
+using System.Diagnostics;
+using System.Windows;
+using System.Windows.Automation;
+using System.Windows.Controls;
+using System.Windows.Controls.Primitives;
+using System.Windows.Data;
+using System.Windows.Documents;
+using System.Windows.Ink;
+using System.Windows.Input;
+using System.Windows.Markup;
+using System.Windows.Media;
+using System.Windows.Media.Animation;
+using System.Windows.Media.Effects;
+using System.Windows.Media.Imaging;
+using System.Windows.Media.Media3D;
+using System.Windows.Media.TextFormatting;
+using System.Windows.Navigation;
+using System.Windows.Shapes;
+using System.Windows.Shell;
+
+
+namespace JoustClient {
+    
+    
+    /// <summary>
+    /// MainWindow
+    /// </summary>
+    public partial class MainWindow : System.Windows.Window, System.Windows.Markup.IComponentConnector {
+        
+        private bool _contentLoaded;
+        
+        /// <summary>
+        /// InitializeComponent
+        /// </summary>
+        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
+        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
+        public void InitializeComponent() {
+            if (_contentLoaded) {
+                return;
+            }
+            _contentLoaded = true;
+            System.Uri resourceLocater = new System.Uri("/JoustClient;component/mainwindow.xaml", System.UriKind.Relative);
+            
+            #line 1 "..\..\MainWindow.xaml"
+            System.Windows.Application.LoadComponent(this, resourceLocater);
+            
+            #line default
+            #line hidden
+        }
+        
+        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
+        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
+        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
+        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
+        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
+        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
+        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
+            this._contentLoaded = true;
+        }
+    }
+}
+
diff --git a/JoustGame/JoustClient/obj/Debug/TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs b/JoustGame/JoustClient/obj/Debug/TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs
new file mode 100644
index 0000000..e69de29
diff --git a/JoustGame/JoustClient/obj/Debug/TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs b/JoustGame/JoustClient/obj/Debug/TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs
new file mode 100644
index 0000000..e69de29
diff --git a/JoustGame/JoustClient/obj/Debug/TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs b/JoustGame/JoustClient/obj/Debug/TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs
new file mode 100644
index 0000000..e69de29
diff --git a/JoustGame/JoustModel/Buzzard.cs b/JoustGame/JoustModel/Buzzard.cs
new file mode 100644
index 0000000..7e8fffc
--- /dev/null
+++ b/JoustGame/JoustModel/Buzzard.cs
@@ -0,0 +1,18 @@
+using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+
+namespace JoustModel
+{
+    public class Buzzard : Enemy
+    {
+        public override int Value { get; set; }
+
+        public Buzzard()
+        {
+            Value = 500;
+        }
+    }
+}
\ No newline at end of file
diff --git a/JoustGame/JoustModel/Egg.cs b/JoustGame/JoustModel/Egg.cs
new file mode 100644
index 0000000..cb0c4fb
--- /dev/null
+++ b/JoustGame/JoustModel/Egg.cs
@@ -0,0 +1,18 @@
+using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+
+namespace JoustModel
+{
+    public class Egg : Enemy
+    {
+        public override int Value { get; set; }
+
+        public Egg()
+        {
+            Value = 250;
+        }
+    }
+}
\ No newline at end of file
diff --git a/JoustGame/JoustModel/Enemy.cs b/JoustGame/JoustModel/Enemy.cs
new file mode 100644
index 0000000..fae9cb5
--- /dev/null
+++ b/JoustGame/JoustModel/Enemy.cs
@@ -0,0 +1,13 @@
+using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+
+namespace JoustModel
+{
+    public abstract class Enemy : Entity
+    {
+
+    }
+}
\ No newline at end of file
diff --git a/JoustGame/JoustModel/Entity.cs b/JoustGame/JoustModel/Entity.cs
new file mode 100644
index 0000000..eda89cf
--- /dev/null
+++ b/JoustGame/JoustModel/Entity.cs
@@ -0,0 +1,81 @@
+using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+using Microsoft.VisualStudio.TestTools.UnitTesting;
+
+namespace JoustModel
+{
+    public abstract class Entity : WorldObject
+    {
+        public double speed;
+        public double angle;
+        
+        public abstract int Value { get; set; }
+
+        public void Die()
+        {
+            World.Instance.objects.Remove(this);
+            // Play death animation
+        }
+
+        public void Update()
+        {
+            // Move based on input/AI
+            // Check for collisions
+        }
+    }
+
+    [TestClass]
+    public class EntityTest
+    {
+        [TestMethod]
+        public void TestMoveUp()
+        {
+            Entity e = new Ostrich();
+            // set initial speed, angle, and position
+            e.Update();
+            Point testPoint = new Point();
+            testPoint.x = 450;
+            testPoint.y = 500;
+            Assert.AreEqual(testPoint, e.coords);
+        }
+
+        [TestMethod]
+        public void TestMoveLeft()
+        {
+            Entity e = new Ostrich();
+            // set initial speed, angle, and position
+            e.Update();
+            Point testPoint = new Point();
+            testPoint.x = 450;
+            testPoint.y = 500;
+            Assert.AreEqual(testPoint, e.coords);
+        }
+
+        [TestMethod]
+        public void TestMoveRight()
+        {
+            Entity e = new Ostrich();
+            // set initial speed, angle, and position
+            e.Update();
+            Point testPoint = new Point();
+            testPoint.x = 450;
+            testPoint.y = 500;
+            Assert.AreEqual(testPoint, e.coords);
+        }
+
+        [TestMethod]
+        public void TestMoveDown()
+        {
+            Entity e = new Ostrich();
+            // set initial speed, angle, and position
+            e.Update();
+            Point testPoint = new Point();
+            testPoint.x = 450;
+            testPoint.y = 500;
+            Assert.AreEqual(testPoint, e.coords);
+        }
+    }
+}
\ No newline at end of file
diff --git a/JoustGame/JoustModel/Hitbox.cs b/JoustGame/JoustModel/Hitbox.cs
new file mode 100644
index 0000000..f16cf4a
--- /dev/null
+++ b/JoustGame/JoustModel/Hitbox.cs
@@ -0,0 +1,67 @@
+using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+using Microsoft.VisualStudio.TestTools.UnitTesting;
+
+namespace JoustModel
+{
+    public class Hitbox
+    {
+        public double width;
+        public double height;
+
+        public Hitbox(int width, int height)
+        {
+            this.width = width;
+            this.height = height;
+        }
+
+        public Hitbox CheckCollisions()
+        {
+            foreach (WorldObject wo in World.Instance.objects)
+            {
+                // if hitboxes intersect return this one
+                if (false)
+                {
+                    return wo.hitbox;
+                }
+            }
+            // return null if no collisions
+            return null;
+        }
+    }
+
+    [TestClass]
+    public class HitboxTest
+    {
+        [TestMethod]
+        public void TestNoCollision()
+        {
+            Ostrich a = new Ostrich();
+            Buzzard b = new Buzzard();
+            a.coords = new Point(500, 500);
+            b.coords = new Point(600, 600);
+            a.hitbox = new Hitbox(50, 50);
+            b.hitbox = new Hitbox(50, 50);
+            World.Instance.objects.Add(a);
+            World.Instance.objects.Add(b);
+            Assert.IsTrue(a.hitbox.CheckCollisions() == null);
+        }
+
+        [TestMethod]
+        public void TestCollisions()
+        {
+            Ostrich a = new Ostrich();
+            Buzzard b = new Buzzard();
+            a.coords = new Point(500, 500);
+            b.coords = new Point(510, 510);
+            a.hitbox = new Hitbox(50, 50);
+            b.hitbox = new Hitbox(50, 50);
+            World.Instance.objects.Add(a);
+            World.Instance.objects.Add(b);
+            Assert.AreEqual(b.hitbox, a.hitbox.CheckCollisions());
+        }
+    }
+}
\ No newline at end of file
diff --git a/JoustGame/JoustModel/JoustModel.csproj b/JoustGame/JoustModel/JoustModel.csproj
index 7ee8c6c..b3af8b5 100644
--- a/JoustGame/JoustModel/JoustModel.csproj
+++ b/JoustGame/JoustModel/JoustModel.csproj
@@ -1,10 +1,10 @@
-<?xml version="1.0" encoding="utf-8"?>
+﻿<?xml version="1.0" encoding="utf-8"?>
 <Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
   <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
   <PropertyGroup>
     <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
     <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
-    <ProjectGuid>93e87207-94fd-4a31-907b-77ce1e3113b6</ProjectGuid>
+    <ProjectGuid>{93E87207-94FD-4A31-907B-77CE1E3113B6}</ProjectGuid>
     <OutputType>Library</OutputType>
     <AppDesignerFolder>Properties</AppDesignerFolder>
     <RootNamespace>JoustModel</RootNamespace>
@@ -30,24 +30,29 @@
     <WarningLevel>4</WarningLevel>
   </PropertyGroup>
   <ItemGroup>
-    <Reference Include="System"/>
-    
-    <Reference Include="System.Core"/>
-    <Reference Include="System.Xml.Linq"/>
-    <Reference Include="System.Data.DataSetExtensions"/>
-    
-    
-    <Reference Include="Microsoft.CSharp"/>
-    
-    <Reference Include="System.Data"/>
-    
-    <Reference Include="System.Net.Http"/>
-    
-    <Reference Include="System.Xml"/>
+    <Reference Include="System" />
+    <Reference Include="System.Core" />
+    <Reference Include="System.Xml.Linq" />
+    <Reference Include="System.Data.DataSetExtensions" />
+    <Reference Include="Microsoft.CSharp" />
+    <Reference Include="System.Data" />
+    <Reference Include="System.Net.Http" />
+    <Reference Include="System.Xml" />
   </ItemGroup>
   <ItemGroup>
-    <Compile Include="Class1.cs" />
+    <Compile Include="Buzzard.cs" />
+    <Compile Include="Egg.cs" />
+    <Compile Include="Enemy.cs" />
+    <Compile Include="Entity.cs" />
+    <Compile Include="Hitbox.cs" />
+    <Compile Include="Ostrich.cs" />
+    <Compile Include="Platform.cs" />
+    <Compile Include="Point.cs" />
+    <Compile Include="Pterodactyl.cs" />
+    <Compile Include="Respawn.cs" />
+    <Compile Include="World.cs" />
     <Compile Include="Properties\AssemblyInfo.cs" />
+    <Compile Include="WorldObject.cs" />
   </ItemGroup>
   <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
- </Project>
+</Project>
\ No newline at end of file
diff --git a/JoustGame/JoustModel/JoustModel.csproj.user b/JoustGame/JoustModel/JoustModel.csproj.user
new file mode 100644
index 0000000..944ec00
--- /dev/null
+++ b/JoustGame/JoustModel/JoustModel.csproj.user
@@ -0,0 +1,6 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <ProjectView>ShowAllFiles</ProjectView>
+  </PropertyGroup>
+</Project>
\ No newline at end of file
diff --git a/JoustGame/JoustModel/Ostrich.cs b/JoustGame/JoustModel/Ostrich.cs
new file mode 100644
index 0000000..a5aaed3
--- /dev/null
+++ b/JoustGame/JoustModel/Ostrich.cs
@@ -0,0 +1,21 @@
+using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+
+namespace JoustModel
+{
+    public class Ostrich : Entity
+    {
+        public int score;
+
+        public override int Value { get; set; }
+
+        public Ostrich()
+        {
+            Value = 750;
+            score = 0;
+        }
+    }
+}
\ No newline at end of file
diff --git a/JoustGame/JoustModel/Platform.cs b/JoustGame/JoustModel/Platform.cs
new file mode 100644
index 0000000..c4567ed
--- /dev/null
+++ b/JoustGame/JoustModel/Platform.cs
@@ -0,0 +1,13 @@
+using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+
+namespace JoustModel
+{
+    public class Platform : WorldObject
+    {
+
+    }
+}
\ No newline at end of file
diff --git a/JoustGame/JoustModel/Point.cs b/JoustGame/JoustModel/Point.cs
new file mode 100644
index 0000000..aca2072
--- /dev/null
+++ b/JoustGame/JoustModel/Point.cs
@@ -0,0 +1,20 @@
+using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+
+namespace JoustModel
+{
+    public class Point
+    {
+        public double x;
+        public double y;
+
+        public Point(double x, double y)
+        {
+            this.x = x;
+            this.y = y;
+        }
+    }
+}
\ No newline at end of file
diff --git a/JoustGame/JoustModel/Pterodactyl.cs b/JoustGame/JoustModel/Pterodactyl.cs
new file mode 100644
index 0000000..fe9121f
--- /dev/null
+++ b/JoustGame/JoustModel/Pterodactyl.cs
@@ -0,0 +1,18 @@
+using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+
+namespace JoustModel
+{
+    public class Pterodactyl : Enemy
+    {
+        public override int Value { get; set; }
+
+        public Pterodactyl()
+        {
+            Value = 1000;
+        }
+    }
+}
\ No newline at end of file
diff --git a/JoustGame/JoustModel/Respawn.cs b/JoustGame/JoustModel/Respawn.cs
new file mode 100644
index 0000000..7b04198
--- /dev/null
+++ b/JoustGame/JoustModel/Respawn.cs
@@ -0,0 +1,13 @@
+﻿using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+
+namespace JoustModel
+{
+    public class Respawn : Platform
+    {
+
+    }
+}
\ No newline at end of file
diff --git a/JoustGame/JoustModel/World.cs b/JoustGame/JoustModel/World.cs
new file mode 100644
index 0000000..a327ea2
--- /dev/null
+++ b/JoustGame/JoustModel/World.cs
@@ -0,0 +1,21 @@
+﻿using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+
+namespace JoustModel
+{
+    public class World
+    {
+        public List<WorldObject> objects;
+
+        private World() { }
+
+        private static World instance = new World();
+        public static World Instance
+        {
+            get { return instance; }
+        }
+    }
+}
diff --git a/JoustGame/JoustModel/WorldObject.cs b/JoustGame/JoustModel/WorldObject.cs
new file mode 100644
index 0000000..c9df944
--- /dev/null
+++ b/JoustGame/JoustModel/WorldObject.cs
@@ -0,0 +1,15 @@
+using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+
+namespace JoustModel
+{
+    public abstract class WorldObject
+    {
+        public Point coords;
+        public Hitbox hitbox;
+        public string image;
+    }
+}
\ No newline at end of file
diff --git a/JoustGame/JoustModel/obj/Debug/DesignTimeResolveAssemblyReferencesInput.cache b/JoustGame/JoustModel/obj/Debug/DesignTimeResolveAssemblyReferencesInput.cache
index 8efc694..0ade5a2 100644
Binary files a/JoustGame/JoustModel/obj/Debug/DesignTimeResolveAssemblyReferencesInput.cache and b/JoustGame/JoustModel/obj/Debug/DesignTimeResolveAssemblyReferencesInput.cache differ
diff --git a/JoustGame/JoustModel/obj/Debug/JoustModel.csproj.CoreCompileInputs.cache b/JoustGame/JoustModel/obj/Debug/JoustModel.csproj.CoreCompileInputs.cache
index 4e9d487..942feeb 100644
--- a/JoustGame/JoustModel/obj/Debug/JoustModel.csproj.CoreCompileInputs.cache
+++ b/JoustGame/JoustModel/obj/Debug/JoustModel.csproj.CoreCompileInputs.cache
@@ -1 +1 @@
-169efb0143f7780892bd6041fc4f44b08aaf9c46
+ff4fd2ebab3452a5bc4bf95c8825e1079e7d1967
diff --git a/JoustGame/JoustModel/obj/Debug/TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs b/JoustGame/JoustModel/obj/Debug/TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs
new file mode 100644
index 0000000..e69de29
diff --git a/JoustGame/JoustModel/obj/Debug/TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs b/JoustGame/JoustModel/obj/Debug/TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs
new file mode 100644
index 0000000..e69de29
diff --git a/JoustGame/JoustModel/obj/Debug/TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs b/JoustGame/JoustModel/obj/Debug/TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs
new file mode 100644
index 0000000..e69de29
